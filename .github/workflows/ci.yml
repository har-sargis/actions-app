name: CI
on:
  pull_request:
    branches: [dev, master]
  push:
    branches: [dev, master]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS, check with linter and  run tests
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm ci
      - run: npm run linter:check
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      - name: Send message to Slack on Success
        if: success() && github.event_name == 'pull_request'
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_AUTH_TOKEN }}
          slack-channel: reusable-components-release
          slack-text: "Jobs have successfully completed. :tada:"
      - name: Send message to Slack on Failure
        if: failure() && github.event_name == 'pull_request'
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_AUTH_TOKEN }}
          slack-channel: reusable-components-release
          slack-text: "Jobs have failed. :tada:"
      - name: Open issue
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the Github workflow **${{github.workflow}}**. \n\n
              The Commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login}}"]
          }'


