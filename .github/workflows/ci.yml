name: CI
on:
  pull_request:
    branches: [dev, master]
  push:
    branches: [dev, master]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - name: Cache node_modules
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-
      # - name: Use NodeJS, check with linter and  run tests
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: '12.x'
      # - run: npm ci
      # - run: npm run linter:check
      # - run: npm test -- --coverage
      #   env:
          # CI: true
      # - name: Build Project
      #   if: github.event_name == 'push'
      #   run: npm run build
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
          git-message: 'chore(release): {version}'
          output-file: 'CHANGELOG.md'
          release-count: '0'
          package-json: './package.json'
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
      - name: Publish to Nexus (latest)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npm run publish
      - name: Publish to Nexus (alpha)
        if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
        run: npm run publish --tag=alpha
      # - name: Send message to Slack on Success
      #   if: success() && github.event_name == 'pull_request'
      #   uses: archive/github-actions-slack@master
      #   with:
      #     slack-bot-user-oauth-access-token: ${{ secrets.RELEASE_BOT_TOKEN }}
      #     slack-channel: reusable-components-release
      #     slack-text: "Jobs have successfully completed. :green_circle:"
      # - name: Send message to Slack on Failure
      #   if: failure() && github.event_name == 'push'
      #   uses: archive/github-actions-slack@master
      #   with:
      #     slack-bot-user-oauth-access-token: ${{ secrets.RELEASE_BOT_TOKEN }}
      #     slack-channel: reusable-components-release
          # slack-text: "Jobs have failed. :red_circle:"